[{"/Users/suha/Desktop/T1000/projects/Cap1/src/index.js":"1","/Users/suha/Desktop/T1000/projects/Cap1/src/App.js":"2","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Result/index.js":"3","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Description/index.js":"4","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Game/index.js":"5","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Card/index.js":"6","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Level/index.js":"7","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Video/index.js":"8"},{"size":320,"mtime":1635952759000,"results":"9","hashOfConfig":"10"},{"size":750,"mtime":1636220608409,"results":"11","hashOfConfig":"10"},{"size":1519,"mtime":1636231373890,"results":"12","hashOfConfig":"10"},{"size":1671,"mtime":1636220872829,"results":"13","hashOfConfig":"10"},{"size":6262,"mtime":1636220782129,"results":"14","hashOfConfig":"10"},{"size":818,"mtime":1636153259000,"results":"15","hashOfConfig":"10"},{"size":1274,"mtime":1636220021424,"results":"16","hashOfConfig":"10"},{"size":855,"mtime":1636219951995,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1jn1wa",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/suha/Desktop/T1000/projects/Cap1/src/index.js",[],["36","37"],"/Users/suha/Desktop/T1000/projects/Cap1/src/App.js",[],"/Users/suha/Desktop/T1000/projects/Cap1/src/components/Result/index.js",["38","39"],"/Users/suha/Desktop/T1000/projects/Cap1/src/components/Description/index.js",[],"/Users/suha/Desktop/T1000/projects/Cap1/src/components/Game/index.js",["40","41","42","43"],"import React from \"react\";\nimport { useParams, useHistory } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport ReactHowler from 'react-howler'\nimport music from  \"./music4.ogg\";\nimport {GoUnmute, GoMute} from \"react-icons/go\"\nimport {GrPowerShutdown} from \"react-icons/gr\"\nimport Card from \"../Card\";\nimport \"./style.css\";\n\nfunction Game() {\n\n\n  const {timer,userName} = useParams();\n  console.log(useParams().timer);\n  const history = useHistory();\n\n  const [arr, setArr] = useState([\n    {\n      name: \"plants7\",\n      src: \"https://i.pinimg.com/564x/a1/53/da/a153da0f37dc7386b2c67502d80ae9f7.jpg\",\n      isSucssed: false,\n    },\n\n    {\n      name: \"plants1\",\n      src: \"https://i.pinimg.com/564x/6d/86/c5/6d86c5153ccade3d70cc235338d4444c.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants2\",\n      src: \"https://i.pinimg.com/564x/c4/77/46/c477469d5bd5f1797cd74bb65847f7db.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants3\",\n      src: \"https://i.pinimg.com/564x/0a/48/a5/0a48a54db97de1dd0cfdd04650df3e36.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants4\",\n      src: \"https://i.pinimg.com/564x/e1/7e/9b/e17e9ba31aff98cf7f04bee00e7d85dc.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants5\",\n      src: \"https://i.pinimg.com/564x/15/56/be/1556becb4658034446f88eb308d8bf9d.jpg\",\n      isSucssed: false,\n    },\n\n    {\n      name: \"plants8\",\n      src: \"https://i.pinimg.com/564x/a2/98/39/a29839270a9676ebd34ca37016a4545a.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants9\",\n      src: \"https://i.pinimg.com/564x/5c/da/c6/5cdac6181e53a22cc156c2ac70303841.jpg\",\n      isSucssed: false,\n    },\n    {\n      name: \"plants10\",\n      src: \"https://i.pinimg.com/564x/d9/fc/e5/d9fce5fb0299f68ac88b206a964123aa.jpg\",\n      isSucssed: false,\n    },\n  ]);\n  \n  let [result, setResult] = useState(0); // init value result =0\n  let [timeSeconds, setTimeSeconds] = useState(timer);\n  let [img1, setImage1] = useState(null); // intial value for obj img1 =null\n  let [img2, setImage2] = useState(null); // intial value for obj img2 =null\n  let [permission,setPermission] =useState(false);\n  let [mute,setMute] =useState(false);\n  //  array & copy array elem => array.length*2\n  useEffect(() => {\n    let tempArr = [...arr, ...arr];\n\n    tempArr = tempArr.map((elem) => ({\n      ...elem,\n      //set random id for each elem\n      id: Math.round(Math.random() * 500),\n    }));\n    //sort by id\n    tempArr.sort((elem1, elem2) => elem1.id - elem2.id);\n    setArr(tempArr);\n  }, []);\n\n  //func coming from card component holding the obj\n  //set it to img2 if ther is img1 || set it to img1\n  const tempImg = (elem) => {\n    console.log(elem);\n\n    if (img1 != null) {\n      //if there is img1 then set chosen elem to img2  as second choise\n      img2 = elem;\n      setImage2(img2);\n    } else {\n      //else set chosen elem to img1 as first choise\n      img1 = elem;\n      setImage1(img1);\n    }\n\n    //end func\n  };\n\n  // check there is chosen card or not\n  // match card => add 1 to result\n  // rest choises\n  useEffect(() => {\n    if (img1 && img2) {\n      setPermission(true)\n      if (img1.name === img2.name  && img1.id != img2.id) {\n        // match card => add 1 to result &rest\n        setResult(result++)\n\n        let cards = arr.map((elem) => {\n          //edit selected to true\n          if (elem.name === img1.name ) {\n            return { ...elem, isSucssed: true };\n          } else {\n            return elem;\n          }\n        }); //loop end\n        setArr(cards);\n        setTimeout(()=>restFunc(), 800);// to hold card until card back\n      } else {\n        setTimeout(()=>restFunc(), 800);// to hold card until card back\n      }\n      setResult(result);\n      if (result === arr.length/2) {\n        //if user finsh  \n          // end of the game\n          history.push(`/Result/${userName}/${result}`);\n      } // to show on screen\n    }\n  }, [img1, img2]); // depend if there is img1,img2 or do not do the effect\n\n  //reset func\n  const restFunc = () => {\n    //rest img1\n    setImage1(null);\n    //rest img2\n    setImage2(null);\n    setPermission(false);\n    setResult(result);\n  }; \n  \n    useEffect(() =>{\n      console.log(\"result\",result);\n      const interval = setInterval(() => {\n       updateTime();\n      }, 1000);\n      return () => clearInterval(interval);\n    }, [result]);\n  \n  \n  \n    function updateTime() {\n      // check is it print every sec\n      if (timeSeconds > 0) {\n        setTimeSeconds(timeSeconds--);\n      } else {\n        history.push(`/Result/${userName}/${result}`);\n      }\n    }\n\n    // useEffect(() => updateTime, [10]);\n\nconst muteFunc=()=>{\nmute=!mute\n  window.Howler.mute(mute)\n  setMute(mute)\n}\n\nlet quit = () => {\n  if (window.confirm(\"Are you sure you want to quit the game?!\")) {\n    \n    \n    window.open(`/Result/${userName}/${result}`,\"_self\");\n  }\n}\n  return (\n\n    <div className=\"game\">\n \n            <ReactHowler\n        // src='http://goldfirestudios.com/proj/howlerjs/sound.ogg'\n        src={music}\n        playing={true}\n        preload={true}\n      />\n\n  <div className=\"gameInfo\">\n  \n      <div className=\"userName\">\n      <div className=\"timer-GL\">\n      <span className =\"timer\">{timeSeconds}</span>\n      <h1>Good Luck </h1>\n      </div>\n      <span>{userName}!</span>\n      </div >\n      <div className=\"score\">\n      <h2>Score\n      <span id=\"score\">{result}</span>\n  </h2></div>\n\n  \n\n      </div>\n      <div className=\"gameBox\">\n        {arr.map((elem, i) => (\n          <Card\n            className=\"card\"\n            elem={elem}\n            tempImg={tempImg} //for hold chosen elem in card component\n            key={i}\n            switchCard={elem === img1 || elem === img2 || elem.isSucssed}\n            permission = {permission}\n            loop={true}\n          />\n        ))}\n      </div>\n           \n      <div className=\"gameSitting\">\n     \n      <button className=\"muteBtn\"\n       onClick={\n        muteFunc\n      }>{mute?<GoMute/>: <GoUnmute/>}\n        </button>\n        <button className=\"muteBtn\" onClick={quit}>\n       <GrPowerShutdown/>\n      </button>\n        <span>\n          {/* <Timer result={result} toResult={toResult}/> */}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Game \n","/Users/suha/Desktop/T1000/projects/Cap1/src/components/Card/index.js",[],"/Users/suha/Desktop/T1000/projects/Cap1/src/components/Level/index.js",[],"/Users/suha/Desktop/T1000/projects/Cap1/src/components/Video/index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":38,"column":44,"nodeType":"50","messageId":"51","endLine":38,"endColumn":46},{"ruleId":"52","severity":1,"message":"53","line":40,"column":12,"nodeType":"54","endLine":40,"endColumn":165},{"ruleId":"55","severity":1,"message":"56","line":86,"column":6,"nodeType":"57","endLine":86,"endColumn":8,"suggestions":"58"},{"ruleId":"48","severity":1,"message":"59","line":112,"column":47,"nodeType":"50","messageId":"51","endLine":112,"endColumn":49},{"ruleId":"55","severity":1,"message":"60","line":136,"column":6,"nodeType":"57","endLine":136,"endColumn":18,"suggestions":"61"},{"ruleId":"55","severity":1,"message":"62","line":154,"column":8,"nodeType":"57","endLine":154,"endColumn":16,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.","ArrayExpression",["66"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'arr', 'history', 'restFunc', 'result', and 'userName'. Either include them or remove the dependency array. You can also do a functional update 'setResult(r => ...)' if you only need 'result' in the 'setResult' call.",["67"],"React Hook useEffect has a missing dependency: 'updateTime'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [arr]",{"range":"75","text":"76"},"Update the dependencies array to be: [arr, history, img1, img2, restFunc, result, userName]",{"range":"77","text":"78"},"Update the dependencies array to be: [result, updateTime]",{"range":"79","text":"80"},[2545,2547],"[arr]",[3930,3942],"[arr, history, img1, img2, restFunc, result, userName]",[4364,4372],"[result, updateTime]"]